/*
 * foodpanda generated by tentackle-project-archetype.
 */

package org.foodpanda.domain.td;

import org.foodpanda.pdo.MessageType;
import org.foodpanda.pdo.md.OrgUnit;
import org.foodpanda.pdo.td.Message;
import org.foodpanda.pdo.td.persist.MessagePersistence;

import org.tentackle.common.Freezable;
import org.tentackle.common.Timestamp;
import org.tentackle.misc.TrackedList;
import org.tentackle.misc.TrackedArrayList;
import org.tentackle.pdo.DomainContext;
import org.tentackle.pdo.PersistentObjectService;
import org.tentackle.session.Session;
import org.tentackle.test.pdo.mock.MockPersistentObject;

import java.io.Serial;

/**
 * Sample persistence mock.
 */
@PersistentObjectService(Message.class)
public class MessagePersistenceMock extends MockPersistentObject<Message, MessagePersistenceMock> implements MessagePersistence {

  @Serial
  private static final long serialVersionUID = 1L;

  // @wurblet declare Declare --mock


  //<editor-fold defaultstate="collapsed" desc="constructors">

  /**
   * Creates a persistent object for a PDO.
   *
   * @param pdo the persistent domain object
   * @param context the domain context
   */
  public MessagePersistenceMock(Message pdo, DomainContext context) {
    super(pdo, context);
  }

  /**
   * Creates a persistent object for a PDO.
   *
   * @param pdo the persistent domain object
   * @param session the session
   */
  public MessagePersistenceMock(Message pdo, Session session) {
    super(pdo, session);
  }

  /**
   * Creates a persistent object for a PDO.
   *
   * @param pdo the persistent domain object
   */
  public MessagePersistenceMock(Message pdo) {
    super(pdo);
  }

  /**
   * Creates a persistent object.
   */
  public MessagePersistenceMock() {
    super();
  }

  //</editor-fold>

  // @wurblet methods MethodsImpl --mock


  // @wurblet relations PdoRelations --mock


  @Override
  public String nextMessageNumber() {
    return "1000";
  }

  @Override
  public Message selectByUniqueDomainKey(String messageNumber) {
    return null;
  }

  @Override
  public TrackedList<Message> findLatest(int limit, long id) {
    return new TrackedArrayList<>();
  }

  @Override
  public TrackedList<Message> findBy(
      String messageNumber,
      Timestamp from, Timestamp until,
      MessageType type,
      OrgUnit<?> orgUnit,
      String pattern) {
    return new TrackedArrayList<>();
  }

}
